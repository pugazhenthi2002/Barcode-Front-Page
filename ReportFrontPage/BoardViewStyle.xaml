<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:vsm="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
					xmlns:converter="clr-namespace:ReportFrontPage">

	<converter:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />

	<Color x:Key="SelectedDateColor">Blue</Color>
	<SolidColorBrush x:Key="SelectedDateBrush"
					 Color="{DynamicResource SelectedDateColor }" />

	<Style x:Key="topRecStyle"
		   TargetType="Rectangle">
		<Setter Property="Width"
				Value="{Binding ElementName=autoAdjustPanel, Path=ActualWidth}" />
		<Setter Property="Fill"
				Value="{Binding ElementName=autoAdjustPanel, Path=Foreground}" />
	</Style>

	<Style x:Key="headerLabelStyle"
		   TargetType="Label">
		<Setter Property="Content"
				Value="{Binding ElementName=autoAdjustPanel, Path=AutoAdjustPanelHeader}" />
		<Setter Property="Foreground"
				Value="{Binding ElementName=autoAdjustPanel, Path=Foreground}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="FontSize"
				Value="{Binding ElementName=autoAdjustPanel, Path=FontSize}" />
		<Setter Property="FontWeight"
				Value="Bold" />
	</Style>

	<!--Week Name Style-->
	<Style TargetType="TextBlock"
		   x:Key="WeekNameStyle">
		<Setter Property="HorizontalAlignment"
				Value="Center" />
		<Setter Property="Foreground"
				Value="{StaticResource SecondaryBrush}" />
		<Setter Property="VerticalAlignment"
				Value="Center" />
		<Setter Property="FontWeight"
				Value="DemiBold" />
		<Setter Property="FontSize"
				Value="14" />
	</Style>

	<!--Calendar Item Style-->
	<Style x:Key="PlaybackCalendarItemStyle"
		   TargetType="CalendarItem">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CalendarItem">
					<ControlTemplate.Resources>
						<!-- Start: Data template for header button -->
						<DataTemplate x:Key="DayTitleTemplate">
							<TextBlock FontWeight="Bold"
									   FontFamily="Verdana"
									   FontSize="9.5"
									   Foreground="#FF333333"
									   HorizontalAlignment="Center"
									   Text="{Binding}"
									   Margin="0,6,0,6"
									   VerticalAlignment="Center" />
						</DataTemplate>
						<!-- End: Data template for header button -->
					</ControlTemplate.Resources>
					<Grid Name="PART_Root"
						  Width="300"
						  Height="300">
						<Grid.Resources>
							<SolidColorBrush x:Key="DisabledColor"
											 Color="#A5FFFFFF" />
						</Grid.Resources>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal" />
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_DisabledVisual"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0" />
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>

						<Border BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="1"
								Background="{TemplateBinding Background}">

							<Border CornerRadius="1"
									BorderBrush="#FFFFFFFF"
									BorderThickness="0">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="35" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<Grid.Resources>
										<!-- Start: Previous button template -->
										<ControlTemplate x:Key="PreviousButtonTemplate"
														 TargetType="Button">
											<Grid Cursor="Hand">
												<vsm:VisualStateManager.VisualStateGroups>
													<vsm:VisualStateGroup x:Name="CommonStates">
														<vsm:VisualState x:Name="Normal" />
														<vsm:VisualState x:Name="MouseOver">
															<Storyboard>
																<ColorAnimation Storyboard.TargetName="BackPathColor"
																				Storyboard.TargetProperty="Color"
																				To="{StaticResource SelectedDateColor}"
																				Duration="0:0:0:0.5" />
															</Storyboard>
														</vsm:VisualState>
														<vsm:VisualState x:Name="Disabled">
															<Storyboard>
																<DoubleAnimation Storyboard.TargetName="TextColor"
																				 Storyboard.TargetProperty="Opacity"
																				 To=".5"
																				 Duration="0" />
															</Storyboard>
														</vsm:VisualState>
													</vsm:VisualStateGroup>
												</vsm:VisualStateManager.VisualStateGroups>
												<Rectangle Fill="#11E5EBF1"
														   Stretch="Fill"
														   Opacity="1" />
												<Grid>
													<Path Stretch="Fill"
														  Data="M150,0C67.159,0,0.001,67.159,0.001,150c0,82.838,67.157,150.003,149.997,150.003S300.002,232.838,300.002,150 C300.002,67.159,232.839,0,150,0z M189.226,218.202c-2.736,2.734-6.321,4.101-9.902,4.101c-3.582,0-7.169-1.367-9.902-4.103 l-56.295-56.292c-0.838-0.537-1.639-1.154-2.368-1.886c-2.796-2.799-4.145-6.479-4.077-10.144 c-0.065-3.667,1.281-7.35,4.077-10.146c0.734-0.731,1.53-1.349,2.368-1.886l56.043-56.043c5.47-5.465,14.34-5.467,19.808,0.003 c5.47,5.467,5.47,14.335,0,19.808l-48.265,48.265l48.514,48.516C194.695,203.864,194.695,212.732,189.226,218.202z">
														<Path.Fill>
															<SolidColorBrush x:Name="BackPathColor"
																			 Color="{StaticResource Secondary}" />
														</Path.Fill>
													</Path>
												</Grid>
											</Grid>
										</ControlTemplate>

										<!-- End: Previous button template -->

										<!-- Start: Next button template -->
										<ControlTemplate x:Key="NextButtonTemplate"
														 TargetType="Button">
											<Grid Cursor="Hand">
												<vsm:VisualStateManager.VisualStateGroups>
													<vsm:VisualStateGroup x:Name="CommonStates">
														<vsm:VisualState x:Name="Normal" />
														<vsm:VisualState x:Name="MouseOver">
															<Storyboard>
																<ColorAnimation Storyboard.TargetName="NextPathColor"
																				Storyboard.TargetProperty="Color"
																				To="{StaticResource SelectedDateColor}"
																				Duration="0:0:0:0.3" />
															</Storyboard>
														</vsm:VisualState>
														<vsm:VisualState x:Name="Disabled">
															<Storyboard>
																<DoubleAnimation Storyboard.TargetName="TextColor"
																				 Storyboard.TargetProperty="Opacity"
																				 To=".5"
																				 Duration="0" />
															</Storyboard>
														</vsm:VisualState>
													</vsm:VisualStateGroup>
												</vsm:VisualStateManager.VisualStateGroups>
												<Rectangle Fill="#11E5EBF1"
														   Stretch="Fill"
														   Opacity="1" />
												<Grid>
													<Path Stretch="Fill"
														  Data="M150,0C67.157,0,0,67.157,0,150c0,82.841,67.157,150,150,150s150-67.159,150-150C300,67.157,232.843,0,150,0z M195.708,160.159c-0.731,0.731-1.533,1.349-2.368,1.886l-56.295,56.295c-2.734,2.736-6.318,4.103-9.902,4.103 s-7.166-1.367-9.902-4.103c-5.47-5.47-5.47-14.34,0-19.808l48.509-48.516l-48.265-48.265c-5.47-5.473-5.47-14.34,0-19.808 c5.47-5.47,14.338-5.467,19.808-0.003l56.046,56.043c0.835,0.537,1.637,1.154,2.365,1.886c2.796,2.796,4.145,6.479,4.082,10.146 C199.852,153.68,198.506,157.361,195.708,160.159z">
														<Path.Fill>
															<SolidColorBrush x:Name="NextPathColor"
																			 Color="{StaticResource Secondary}" />
														</Path.Fill>
													</Path>
												</Grid>
											</Grid>
										</ControlTemplate>

										<!-- End: Next button template -->

										<!-- Start: Header button template -->
										<ControlTemplate x:Key="HeaderButtonTemplate"
														 TargetType="Button">
											<Grid Cursor="Hand"
												  Name="myGrid1">
												<vsm:VisualStateManager.VisualStateGroups>
													<vsm:VisualStateGroup x:Name="CommonStates">
														<vsm:VisualState x:Name="Normal" />
														<vsm:VisualState x:Name="MouseOver">
															<Storyboard>
																<DoubleAnimation Storyboard.TargetName="TextGlow"
																				 Storyboard.TargetProperty="BlurRadius"
																				 To="30"
																				 Duration="0:0:0:0.4" />
															</Storyboard>
														</vsm:VisualState>
														<vsm:VisualState x:Name="Disabled">
															<Storyboard>
																<DoubleAnimation Storyboard.TargetName="buttonContent"
																				 Storyboard.TargetProperty="Opacity"
																				 To=".5"
																				 Duration="0" />
															</Storyboard>
														</vsm:VisualState>
													</vsm:VisualStateGroup>
												</vsm:VisualStateManager.VisualStateGroups>

												<!-- This Border is new -->
												<Border Padding="12 0"
														CornerRadius="6"
														Name="myBorder">

													<ContentPresenter x:Name="buttonContent"
																	  Content="{TemplateBinding Content}"
																	  ContentTemplate="{TemplateBinding ContentTemplate}">
														<TextElement.Foreground>

															<SolidColorBrush x:Name="TextColor"
																			 Color="{StaticResource Secondary}" />
														</TextElement.Foreground>
													</ContentPresenter>
													<Border.Effect>
														<DropShadowEffect x:Name="TextGlow"
																		  Color="{StaticResource Secondary}"
																		  ShadowDepth="0"
																		  BlurRadius="0" />
													</Border.Effect>
												</Border>

											</Grid>
										</ControlTemplate>
										<!-- End: Header button template -->

									</Grid.Resources>

									<!-- Start: Header button content -->
									<Button x:Name="PART_HeaderButton"
											Grid.Row="0"
											Grid.Column="0"
											Template="{StaticResource HeaderButtonTemplate}"
											HorizontalContentAlignment="Left"
											VerticalContentAlignment="Center"
											FontWeight="Bold"
											Height="30"
											FontSize="18"
											Focusable="False" />
									<!-- End: Header button content -->

									<!-- Start: Previous button content -->
									<Button x:Name="PART_PreviousButton"
											Grid.Row="0"
											Grid.Column="1"
											Template="{StaticResource PreviousButtonTemplate}"
											Margin="2"
											Height="20"
											Width="20"
											HorizontalAlignment="Left"
											Focusable="False" />
									<!-- End: Previous button content -->

									<!-- Start: Next button content -->
									<Button x:Name="PART_NextButton"
											Grid.Row="0"
											Grid.Column="2"
											Margin="2"
											Height="20"
											Width="20"
											HorizontalAlignment="Right"
											Template="{StaticResource NextButtonTemplate}"
											Focusable="False" />
									<!-- End: Next button content -->

									<!--Start: Week Names-->
									<Grid Grid.Row="1"
										  Name="MonthGrid"
										  Grid.ColumnSpan="3"
										  IsHitTestVisible="False"
										  Margin="10,0,10,0">
										<Grid.ColumnDefinitions>
											<ColumnDefinition />
											<ColumnDefinition />
											<ColumnDefinition />
											<ColumnDefinition />
											<ColumnDefinition />
											<ColumnDefinition />
											<ColumnDefinition />
										</Grid.ColumnDefinitions>

										<TextBlock Text="Sun"
												   Grid.Column="0"
												   Style="{StaticResource WeekNameStyle}" />
										<TextBlock Text="Mon"
												   Grid.Column="1"
												   Style="{StaticResource WeekNameStyle}" />
										<TextBlock Text="Tue"
												   Grid.Column="2"
												   Style="{StaticResource WeekNameStyle}" />
										<TextBlock Text="Wed"
												   Grid.Column="3"
												   Style="{StaticResource WeekNameStyle}" />
										<TextBlock Text="Thu"
												   Grid.Column="4"
												   Style="{StaticResource WeekNameStyle}" />
										<TextBlock Text="Fri"
												   Grid.Column="5"
												   Style="{StaticResource WeekNameStyle}" />
										<TextBlock Text="Sat"
												   Grid.Column="6"
												   Style="{StaticResource WeekNameStyle}" />
										<Line Stroke="{StaticResource SecondaryBrush}"
											  Grid.ColumnSpan="7"
											  StrokeThickness="3"
											  X1="0"
											  Y1="{Binding ElementName=MonthGrid, Path=ActualHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
											  X2="{Binding ElementName=MonthGrid, Path=ActualWidth, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
											  Y2="{Binding ElementName=MonthGrid, Path=ActualHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
											  Panel.ZIndex="2" />
									</Grid>
									<!--End: Week Names-->

									<!-- Start: Month Content Grid -->
									<Grid x:Name="PART_MonthView"
										  Grid.Row="2"
										  Grid.ColumnSpan="3"
										  Visibility="Visible"
										  Margin="6,0,6,6">
										<Grid.RowDefinitions>
											<RowDefinition Height="0" />
											<RowDefinition Height="*" />
											<RowDefinition Height="*" />
											<RowDefinition Height="*" />
											<RowDefinition Height="*" />
											<RowDefinition Height="*" />
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>

									</Grid>
									<!-- End: Month Content Grid -->

									<!-- End: Year Content Grid -->
									<Grid x:Name="PART_YearView"
										  Grid.Row="1"
										  Grid.RowSpan="2"
										  Grid.ColumnSpan="3"
										  Visibility="Hidden"
										  Margin="6,0,7,6">
										<Grid.RowDefinitions>
											<RowDefinition Height="*" />
											<RowDefinition Height="*" />
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
									</Grid>
									<!-- End: Year Content Grid -->
								</Grid>
							</Border>
						</Border>
						<Rectangle x:Name="PART_DisabledVisual"
								   Opacity="0"
								   Visibility="Collapsed"
								   Stretch="Fill"
								   StrokeThickness="1"
								   RadiusX="2"
								   RadiusY="2"
								   Stroke="{StaticResource DisabledColor}"
								   Fill="{StaticResource DisabledColor}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter TargetName="PART_DisabledVisual"
									Property="Visibility"
									Value="Visible" />
						</Trigger>
						<DataTrigger Value="Year">
							<DataTrigger.Binding>
								<Binding Path="DisplayMode">
									<Binding.RelativeSource>
										<RelativeSource Mode="FindAncestor"
														AncestorType="{x:Type Calendar}" />
									</Binding.RelativeSource>
								</Binding>
							</DataTrigger.Binding>
							<Setter TargetName="PART_MonthView"
									Property="Visibility"
									Value="Hidden" />
							<Setter TargetName="PART_YearView"
									Property="Visibility"
									Value="Visible" />
						</DataTrigger>
						<DataTrigger Value="Decade">
							<DataTrigger.Binding>
								<Binding Path="DisplayMode">
									<Binding.RelativeSource>
										<RelativeSource Mode="FindAncestor"
														AncestorType="{x:Type Calendar}" />
									</Binding.RelativeSource>
								</Binding>
							</DataTrigger.Binding>
							<Setter TargetName="PART_MonthView"
									Property="Visibility"
									Value="Hidden" />
							<Setter TargetName="PART_YearView"
									Property="Visibility"
									Value="Visible" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Calendar Date Style-->
	<Style TargetType="{x:Type CalendarDayButton}"
		   x:Key="calendarDayButtonStyle">
		<Style.Triggers>
			<Trigger Property="IsInactive"
					 Value="False">
				<Setter Property="Foreground"
						Value="{StaticResource SecondaryBrush}" />
			</Trigger>
			<Trigger Property="IsInactive"
					 Value="True">
				<Setter Property="Foreground"
						Value="Gray" />
			</Trigger>
		</Style.Triggers>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CalendarDayButton">
					<Border x:Name="DayButtonBorder"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="10"
							Margin="2">
						<Border.Background>
							<SolidColorBrush x:Name="DateBackground"
											 Color="{StaticResource Primary}" />
						</Border.Background>

						<Border>
							<ContentPresenter x:Name="contentPresenter"
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center">
								<TextElement.FontSize>14</TextElement.FontSize>
								<!--<TextElement.Foreground>
								<SolidColorBrush x:Name="DateForeground"
												 Color="AliceBlue" />
							</TextElement.Foreground>-->
							</ContentPresenter>
						</Border>
					</Border>

					<ControlTemplate.Triggers>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsInactive"
										   Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="contentPresenter"
														Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
														To="{StaticResource Primary}"
														Duration="0:0:0:0.4" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>

							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="contentPresenter"
														Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
														To="Gray"
														Duration="0:0:0:0.4" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsInactive"
										   Value="False" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="contentPresenter"
														Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
														To="{StaticResource Primary}"
														Duration="0:0:0:0.4" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>

							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="contentPresenter"
														Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
														To="{StaticResource Secondary}"
														Duration="0:0:0:0.4" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>

						<Trigger Property="IsMouseOver"
								 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="DateBackground"
														Storyboard.TargetProperty="Color"
														To="{StaticResource Secondary}"
														Duration="0:0:0:0.4" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>

							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="DateBackground"
														Storyboard.TargetProperty="Color"
														To="{StaticResource Primary}"
														Duration="0:0:0:0.4" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>

						</Trigger>

						<Trigger Property="IsSelected"
								 Value="True">

							<Setter TargetName="DayButtonBorder"
									Property="Background"
									Value="{StaticResource SelectedDateBrush}" />
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<!--Calendar Month and Decade Style-->
	<Style TargetType="{x:Type CalendarButton}"
		   x:Key="calendarButtonStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CalendarButton">
					<Border x:Name="MonthButtonBorder"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="5">
						<Border.Background>
							<SolidColorBrush x:Name="MonthBackground"
											 Color="{StaticResource Primary}" />
						</Border.Background>

						<ContentPresenter HorizontalAlignment="Center"
										  VerticalAlignment="Center">
							<TextElement.FontWeight>DemiBold</TextElement.FontWeight>
							<TextElement.FontSize>14</TextElement.FontSize>
							<TextElement.Foreground>
								<SolidColorBrush x:Name="MonthForeground"
												 Color="{StaticResource Secondary}" />
							</TextElement.Foreground>
						</ContentPresenter>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="MonthForeground"
														Duration="0:0:0:0.4"
														Storyboard.TargetProperty="Color"
														To="{StaticResource Primary}" />

										<ColorAnimation Storyboard.TargetName="MonthBackground"
														Duration="0:0:0:0.4"
														Storyboard.TargetProperty="Color"
														To="{StaticResource Secondary}" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="MonthForeground"
														Duration="0:0:0:0.4"
														Storyboard.TargetProperty="Color"
														To="{StaticResource Secondary}" />

										<ColorAnimation Storyboard.TargetName="MonthBackground"
														Duration="0:0:0:0.4"
														Storyboard.TargetProperty="Color"
														To="{StaticResource Primary}" />

									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>

						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<!--Calendar Style-->
	<Style TargetType="{x:Type Calendar}"
		   x:Key="calendarStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Calendar">
					<Border x:Name="CalendarBorder"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="10"
							Background="{TemplateBinding Background}"
							Padding="1">
						<CalendarItem x:Name="PART_CalendarItem"
									  Style="{StaticResource PlaybackCalendarItemStyle}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="CalendarDayButtonStyle"
				Value="{StaticResource calendarDayButtonStyle}" />
		<Setter Property="CalendarButtonStyle"
				Value="{StaticResource calendarButtonStyle}" />
		<Setter Property="Background"
				Value="{StaticResource PrimaryBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource PrimaryBrush}" />
		<Setter Property="BorderThickness"
				Value="2" />
		<Setter Property="FontFamily"
				Value="Ebrima" />
	</Style>

	<!--Calendar Icon Oscillation Style-->
	<Style TargetType="Button"
		   x:Key="DateOscillateStyle">
		<Setter Property="RenderTransformOrigin"
				Value="0.5,0" />
		<Setter Property="RenderTransform">
			<Setter.Value>
				<RotateTransform />
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard RepeatBehavior="Forever"
									AutoReverse="True">
							<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
											 From="-5"
											 To="5"
											 Duration="0:0:0:0.5" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
											 To="0"
											 Duration="0:0:0:0.5" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--DatePicker TextBox Style-->
	<Style TargetType="DatePickerTextBox"
		   x:Key="DatePickStyle">
		<Setter Property="FontWeight"
				Value="Bold" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DatePickerTextBox">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
						<ScrollViewer x:Name="PART_ContentHost"
									  Margin="0" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--DatePicker Style-->
	<Style x:Key="DatePickerStyle"
		   TargetType="{x:Type DatePicker}">
		<Setter Property="IsTodayHighlighted"
				Value="True" />
		<Setter Property="SelectedDateFormat"
				Value="Short" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Padding"
				Value="3,2,0,2" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DatePicker}">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							CornerRadius="5">
						<Grid x:Name="PART_Root"
							  Height="29"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<Grid.Resources>

								<ControlTemplate x:Key="DatePickerTextBoxStyle"
												 TargetType="DatePickerTextBox">
									<Grid>
										<TextBox x:Name="PART_TextBox"
												 Text="{Binding Path=SelectedDate,StringFormat='dd MMMM, yyyy', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}"
												 BorderThickness="0"
												 VerticalAlignment="Center"
												 HorizontalAlignment="Stretch"
												 Background="{TemplateBinding Background}"
												 Foreground="{TemplateBinding Foreground}" />
										<TextBlock Text="Select a Date"
												   Foreground="{TemplateBinding Foreground}"
												   VerticalAlignment="Center"
												   HorizontalAlignment="Left"
												   FontSize="14"
												   Margin="5,0,0,0"
												   IsHitTestVisible="False"
												   Visibility="{Binding ElementName=PART_TextBox, Path=Text, Converter={StaticResource NullToVisibilityConverter}}" />
									</Grid>
								</ControlTemplate>

								<!-- Main DatePicker Brushes -->
								<SolidColorBrush x:Key="DisabledBrush"
												 Color="#A5FFFFFF" />

								<!-- Button Template -->
								<ControlTemplate x:Key="DropDownButtonTemplate"
												 TargetType="Button">
									<Grid Height="28">
										<vsm:VisualStateManager.VisualStateGroups>
											<vsm:VisualStateGroup x:Name="CommonStates">
												<vsm:VisualState x:Name="MouseOver">
													<Storyboard>
														<ColorAnimation Duration="0"
																		Storyboard.TargetName="Background"
																		Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
																		To="DeepSkyBlue" />
														<ColorAnimationUsingKeyFrames BeginTime="0"
																					  Duration="0:0:0:0.4"
																					  Storyboard.TargetName="BackgroundGradient"
																					  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
															<SplineColorKeyFrame KeyTime="0"
																				 Value="#7FFFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0"
																					  Duration="0:0:0:0.4"
																					  Storyboard.TargetName="BackgroundGradient"
																					  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
															<SplineColorKeyFrame KeyTime="0"
																				 Value="#CCFFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0"
																					  Duration="0:0:0:0.4"
																					  Storyboard.TargetName="BackgroundGradient"
																					  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
															<SplineColorKeyFrame KeyTime="0"
																				 Value="#F2FFFFFF" />
														</ColorAnimationUsingKeyFrames>
													</Storyboard>
												</vsm:VisualState>
											</vsm:VisualStateGroup>
										</vsm:VisualStateManager.VisualStateGroups>

										<!--Start UI-->
										<Grid Margin="0"
											  Background="#11FFFFFF"
											  FlowDirection="LeftToRight">
											<Grid.RenderTransform>
												<TransformGroup>
													<ScaleTransform />
													<SkewTransform />
													<RotateTransform Angle="0" />
													<TranslateTransform />
												</TransformGroup>
											</Grid.RenderTransform>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="20*" />
												<ColumnDefinition Width="20*" />
												<ColumnDefinition Width="20*" />
												<ColumnDefinition Width="20*" />
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="23*" />
												<RowDefinition Height="19*" />
												<RowDefinition Height="19*" />
												<RowDefinition Height="19*" />
											</Grid.RowDefinitions>
											<Border Margin="0"
													Grid.ColumnSpan="4"
													Grid.Row="0"
													Grid.RowSpan="4"
													BorderThickness="1"
													BorderBrush="#FF45D6FA"
													Opacity="0"
													CornerRadius="0,0,1,1"
													x:Name="Highlight" />
											<Border x:Name="Background"
													Margin="0,-1,0,0"
													Grid.ColumnSpan="4"
													Grid.Row="1"
													Grid.RowSpan="3"
													BorderThickness="1"
													BorderBrush="Transparent"
													Opacity="1"
													CornerRadius=".5"
													Background="LightBlue" />
											<Border x:Name="BackgroundGradient"
													Margin="0,-1,0,0"
													Grid.ColumnSpan="4"
													Grid.Row="1"
													Grid.RowSpan="3"
													BorderThickness="1"
													BorderBrush="{TemplateBinding Foreground}"
													Opacity="1"
													CornerRadius="0,0,2,2">
												<Border.Background>
													<LinearGradientBrush StartPoint=".7,0"
																		 EndPoint=".7,1">
														<GradientStop Color="#FFFFFFFF"
																	  Offset="0" />
														<GradientStop Color="#F9FFFFFF"
																	  Offset="0.375" />
														<GradientStop Color="#E5FFFFFF"
																	  Offset="0.625" />
														<GradientStop Color="#C6FFFFFF"
																	  Offset="1" />
													</LinearGradientBrush>
												</Border.Background>
											</Border>
											<Rectangle Grid.ColumnSpan="4"
													   Grid.RowSpan="1"
													   StrokeThickness="1"
													   Stroke="{TemplateBinding Foreground}"
													   Fill="{TemplateBinding Foreground}">

											</Rectangle>
											<Path HorizontalAlignment="Center"
												  Margin="4,3,4,3"
												  VerticalAlignment="Center"
												  RenderTransformOrigin="0.5,0.5"
												  Grid.Column="0"
												  Grid.Row="1"
												  Fill="#FF2F2F2F"
												  Stretch="Fill"
												  Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
												  Grid.ColumnSpan="4"
												  Grid.RowSpan="3" />
											<Ellipse HorizontalAlignment="Center"
													 VerticalAlignment="Center"
													 Fill="AliceBlue"
													 StrokeThickness="0"
													 Grid.ColumnSpan="4"
													 Width="3"
													 Height="3" />
											<Border Grid.ColumnSpan="4"
													Grid.Row="0"
													Grid.RowSpan="4"
													BorderThickness="1"
													BorderBrush="#B2FFFFFF"
													Opacity="0"
													CornerRadius="0,0,.5,.5"
													x:Name="DisabledVisual" />
										</Grid>
										<!--End UI-->
									</Grid>
								</ControlTemplate>
							</Grid.Resources>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Button x:Name="PART_Button"
									Grid.Row="0"
									Grid.Column="1"
									Template="{StaticResource DropDownButtonTemplate}"
									Foreground="{TemplateBinding Foreground}"
									Width="25"
									Margin="0,0,5,0"
									Focusable="False"
									VerticalAlignment="Top"
									HorizontalAlignment="Left"
									Style="{StaticResource DateOscillateStyle}" />
							<DatePickerTextBox x:Name="PART_TextBox"
											   Grid.Row="0"
											   Grid.Column="0"
											   MinWidth="100"
											   MinHeight="20"
											   FontSize="16"
											   Background="{TemplateBinding Background}"
											   Foreground="{TemplateBinding Foreground}"
											   Template="{StaticResource DatePickerTextBoxStyle}"
											   Margin="0,0,5,0">
							</DatePickerTextBox>

							<Grid x:Name="PART_DisabledVisual"
								  Opacity="0"
								  IsHitTestVisible="False"
								  Grid.Row="0"
								  Margin="0"
								  Grid.Column="0"
								  Grid.ColumnSpan="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Rectangle Grid.Row="0"
										   Grid.Column="0"
										   RadiusX="1"
										   RadiusY="1"
										   Fill="Red"
										   Margin="0,0,5,0" />
								<Rectangle Grid.Row="0"
										   Grid.Column="1"
										   RadiusX="1"
										   RadiusY="1"
										   Fill="Blue"
										   Height="20"
										   Width="20"
										   Margin="0,0,5,0" />
								<Popup x:Name="PART_Popup"
									   PlacementTarget="{Binding ElementName=PART_Button}"
									   Placement="Bottom"
									   StaysOpen="False"
									   AllowsTransparency="True" />
							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate TargetType="CheckBox"
					 x:Key="ReportBoardControlTemplate">
		<Border CornerRadius="10"
				x:Name="myBorder"
				BorderBrush="Red"
				BorderThickness="0">
			<Grid>
				<Grid.Resources>
					<Style TargetType="Label">
						<Setter Property="HorizontalAlignment"
								Value="Center" />
						<Setter Property="VerticalContentAlignment"
								Value="Center" />
						<Setter Property="FontSize"
								Value="32" />
						<Setter Property="FontWeight"
								Value="Bold" />
						<Setter Property="FontStretch"
								Value="Normal" />
						<Setter Property="FontStyle"
								Value="Normal" />
						<Setter Property="Padding"
								Value="10,5,10,5" />
						<Setter Property="Foreground"
								Value="AliceBlue" />

					</Style>
				</Grid.Resources>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="auto" />
				</Grid.RowDefinitions>

				<Label Name="reportNameLabel"
					   Grid.Row="0"
					   Content="{Binding Path=ReportName}"
					   FontWeight="Bold"
					   FontFamily="Arial"
					   FontStyle="Normal"
					   FontSize="18" />

				<StackPanel Grid.Row="1"
							HorizontalAlignment="Stretch"
							Orientation="Vertical"
							FlowDirection="LeftToRight">

					<Label Content="{Binding DefectCountString}"
						   HorizontalAlignment="Stretch"
						   VerticalContentAlignment="Center"
						   FontSize="14"
						   FontWeight="Regular" />

					<Label Content="{Binding OperatorNameString}"
						   HorizontalAlignment="Left"
						   VerticalContentAlignment="Center"
						   FontSize="14"
						   FontWeight="Regular" />

					<Label Content="{Binding PrefixString}"
						   HorizontalAlignment="Left"
						   VerticalContentAlignment="Center"
						   FontSize="14"
						   FontWeight="Regular"
						   Margin="0,0,0,20" />
				</StackPanel>
			</Grid>

			<Border.Style>
				<Style TargetType="Border">
					<Setter Property="Background"
							Value="{StaticResource SecondaryBrush}" />
					<Style.Triggers>
						<DataTrigger Binding="{Binding Path=ReportStatus}"
									 Value="UnderReview">
							<Setter Property="Background"
									Value="{StaticResource UnderReviewStatusBrushNormal}" />
						</DataTrigger>

						<DataTrigger Binding="{Binding Path=ReportStatus}"
									 Value="Reviewed">
							<Setter Property="Background"
									Value="{StaticResource ReviewStatusBrushNormal}" />
						</DataTrigger>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
										   Value="True" />
								<Condition Binding="{Binding Path=ReportStatus}"
										   Value="UnderReview" />
							</MultiDataTrigger.Conditions>

							<MultiDataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														To="{StaticResource ReportUnderReviewStatusHover}"
														Duration="0:0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.EnterActions>

							<MultiDataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														To="{StaticResource ReportUnderReviewStatusNormal}"
														Duration="0:0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.ExitActions>

						</MultiDataTrigger>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
										   Value="True" />
								<Condition Binding="{Binding Path=ReportStatus}"
										   Value="Reviewed" />
							</MultiDataTrigger.Conditions>

							<MultiDataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														To="{StaticResource ReportReviewStatusHover}"
														Duration="0:0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.EnterActions>

							<MultiDataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														To="{StaticResource ReportReviewStatusNormal}"
														Duration="0:0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.ExitActions>
						</MultiDataTrigger>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected}"
										   Value="True" />
								<Condition Binding="{Binding ReportStatus}"
										   Value="UnderReview" />
							</MultiDataTrigger.Conditions>

							<MultiDataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														To="{StaticResource Primary}"
														Duration="0:0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.EnterActions>

							<MultiDataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														To="{StaticResource ReportUnderReviewStatusNormal}"
														Duration="0:0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.ExitActions>
						</MultiDataTrigger>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected}"
										   Value="True" />
								<Condition Binding="{Binding ReportStatus}"
										   Value="Reviewed" />
							</MultiDataTrigger.Conditions>

							<MultiDataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														To="{StaticResource Primary}"
														Duration="0:0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.EnterActions>

							<MultiDataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
														To="{StaticResource ReportReviewStatusNormal}"
														Duration="0:0:0:0.3" />
									</Storyboard>
								</BeginStoryboard>
							</MultiDataTrigger.ExitActions>
						</MultiDataTrigger>

					</Style.Triggers>
				</Style>
			</Border.Style>
		</Border>

	</ControlTemplate>

	<Style x:Key="ReportBoardStyle"
		   TargetType="CheckBox">
		<Setter Property="Margin"
				Value="5" />
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect Color="DarkGray"
								  ShadowDepth="0"
								  BlurRadius="25"
								  Opacity="0" />
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Cursor"
						Value="Hand" />
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="(CheckBox.Effect).Opacity"
											 To="1"
											 Duration="0:0:0:0.3" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>

				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="(CheckBox.Effect).Opacity"
											 To="0"
											 Duration="0:0:0:0.3" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>

			</Trigger>
		</Style.Triggers>
	</Style>

	<ControlTemplate x:Key="ComboBoxToggleButton"
					 TargetType="{x:Type ToggleButton}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border x:Name="Border"
					Grid.ColumnSpan="2"
					CornerRadius="0"
					Background="#FF3F3F3F"
					BorderBrush="#FF97A0A5"
					BorderThickness="1" />
			<Border Grid.Column="0"
					CornerRadius="0"
					Margin="1"
					Background="#FF3F3F3F"
					BorderBrush="#FF97A0A5"
					BorderThickness="0,0,1,0" />
			<Path x:Name="Arrow"
				  Grid.Column="1"
				  Fill="White"
				  HorizontalAlignment="Center"
				  VerticalAlignment="Center"
				  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
		</Grid>
		<!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxTextBox"
					 TargetType="{x:Type TextBox}">
		<Border x:Name="PART_ContentHost"
				Focusable="False"
				Background="{TemplateBinding Background}" />
	</ControlTemplate>

	<Style x:Key="{x:Type ComboBox}"
		   TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels"
				Value="true" />
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll"
				Value="true" />
		<Setter Property="MinWidth"
				Value="120" />
		<Setter Property="MinHeight"
				Value="20" />
		<Setter Property="Foreground"
				Value="White" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton Name="ToggleButton"
									  Template="{StaticResource ComboBoxToggleButton}"
									  Grid.Column="2"
									  Focusable="false"
									  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
									  ClickMode="Press">
						</ToggleButton>
						<ContentPresenter Name="ContentSite"
										  IsHitTestVisible="False"
										  Content="{TemplateBinding SelectionBoxItem}"
										  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
										  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
										  Margin="3,3,23,3"
										  VerticalAlignment="Center"
										  HorizontalAlignment="Left" />
						<TextBox x:Name="PART_EditableTextBox"
								 Style="{x:Null}"
								 Template="{StaticResource ComboBoxTextBox}"
								 HorizontalAlignment="Left"
								 VerticalAlignment="Center"
								 Margin="3,3,23,3"
								 Focusable="True"
								 Background="#FF3F3F3F"
								 Foreground="Green"
								 Visibility="Hidden"
								 IsReadOnly="{TemplateBinding IsReadOnly}" />
						<Popup Name="Popup"
							   Placement="Bottom"
							   IsOpen="{TemplateBinding IsDropDownOpen}"
							   AllowsTransparency="True"
							   Focusable="False"
							   PopupAnimation="Slide">

							<Grid Name="DropDown"
								  SnapsToDevicePixels="True"
								  MinWidth="{TemplateBinding ActualWidth}"
								  MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder"
										Background="#FF3F3F3F"
										BorderThickness="1"
										BorderBrush="#888888" />
								<ScrollViewer Margin="4,6,4,6"
											  SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True"
												KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems"
								 Value="false">
							<Setter TargetName="DropDownBorder"
									Property="MinHeight"
									Value="95" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Foreground"
									Value="#888888" />
						</Trigger>
						<Trigger Property="IsGrouping"
								 Value="true">
							<Setter Property="ScrollViewer.CanContentScroll"
									Value="false" />
						</Trigger>
						<Trigger SourceName="Popup"
								 Property="Popup.AllowsTransparency"
								 Value="true">
							<Setter TargetName="DropDownBorder"
									Property="CornerRadius"
									Value="0" />
							<Setter TargetName="DropDownBorder"
									Property="Margin"
									Value="0,2,0,0" />
						</Trigger>
						<Trigger Property="IsEditable"
								 Value="true">
							<Setter Property="IsTabStop"
									Value="false" />
							<Setter TargetName="PART_EditableTextBox"
									Property="Visibility"
									Value="Visible" />
							<Setter TargetName="ContentSite"
									Property="Visibility"
									Value="Hidden" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
		</Style.Triggers>
	</Style>

	<!-- SimpleStyles: ComboBoxItem -->
	<Style x:Key="{x:Type ComboBoxItem}"
		   TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels"
				Value="true" />
		<Setter Property="Foreground"
				Value="White" />
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border Name="Border"
							Padding="2"
							SnapsToDevicePixels="true">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted"
								 Value="true">
							<Setter TargetName="Border"
									Property="Background"
									Value="#FF4F4F4F" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Foreground"
									Value="#888888" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>